version: '2.1'

x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

networks:
  traefik_proxy:
    external: true
  monitor-net:
    driver: bridge

volumes:
    prometheus_data:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: '/mnt/sdd/graph-data/${VOLUME_ID:-80}/prometheus_data'
    grafana_data:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: '/mnt/sdd/graph-data/${VOLUME_ID:-80}/grafana_data'


services:


######################################################################################
#####################          PROMETHEUS CONTAINER            #######################
######################################################################################



  prometheus:
    image: prom/prometheus
    # container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################          ALERT MANAGER CONTAINER         #######################
######################################################################################



  alertmanager:
    image: prom/alertmanager
    # container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################         NODE EXPORTER CONTAINER          #######################
######################################################################################



  nodeexporter:
    image: prom/node-exporter
    # container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################             CADVISOR CONTAINER           #######################
######################################################################################



  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    # container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging



######################################################################################
#####################           GRAFANA CONTAINER              #######################
######################################################################################



  grafana:
    image: grafana/grafana
    # container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_BRUTE_FORCE_LOGIN_PROTECTION=true
      - postgres_host=${DB_HOST:-postgres}
      - postgres_user=${DB_USER:-graph-node}
      - postgres_pass=${DB_PASS:-db-password}
      - postgres_db=${GRAPH_NODE_DB_NAME:-graph-node}
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
      - traefik_proxy
    logging: *default-logging
    labels:
      - "org.label-schema.group=monitoring"
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.http.services.graph-grafana-${VOLUME_ID:-80}.loadbalancer.server.port=3000"
      - "traefik.http.routers.graph-grafana-${VOLUME_ID:-80}.entrypoints=web"
      #- "traefik.http.routers.graph-grafana-${VOLUME_ID:-80}.tls.certresolver=myresolver"
      - "traefik.http.routers.graph-grafana-${VOLUME_ID:-80}.rule=Host(`$GRAFANA_HOST`)"

######################################################################################
#####################          PUSHGATEWAY CONTAINER           #######################
######################################################################################



  pushgateway:
    image: prom/pushgateway
    # container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging


######################################################################################
#####################         TRAEFIK PROXY CONTAINER          #######################
######################################################################################      


#  traefik:
#    image: traefik:latest
#    container_name: traefik
#    restart: always
#    expose:
#      - "8082"
#    ports:
#      - "443:443"
#      - "80:80"
#    command:
#      - "--api=true"
#      - "--api.insecure=true"
#      - "--api.dashboard=true"
#      - "--log.level=DEBUG"
#      - "--providers.docker=true"
#      - "--providers.docker.exposedbydefault=false"
#      - "--providers.file.filename=/dynamic_config.yml"
#      - "--entrypoints.websecure.address=:443"
#      - "--entryPoints.metrics.address=:8082"
#      - "--metrics.prometheus.entryPoint=metrics"
#      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
#      # TESTING
#     - "--certificatesresolvers.myresolver.acme.email=$EMAIL"
#      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
#    volumes:
#      - "./traefik/letsencrypt:/letsencrypt"
#      - "./traefik/config/dynamic_config.yml:/dynamic_config.yml"
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#    networks:
#      - monitor-net
#    labels:
#      - "traefik.enable=true"
