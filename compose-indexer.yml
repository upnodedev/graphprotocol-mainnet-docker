version: '2.1'

x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

networks:
  traefik_proxy:
    external: true
  monitor-net:
    driver: bridge

volumes:
    postgres2_data:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: '/mnt/sdd/graph-data/${VOLUME_ID:-80}/postgres2_data'


services:

######################################################################################
#####################            CLI CONTAINER                 #######################
######################################################################################

  cli:
    build:
      context: ./cli
    # container_name: cli
    restart: unless-stopped
    environment:
      GEO_COORDINATES: ${GEO_COORDINATES:-69.42069 69.42069}
    tty: true
    networks:
      - monitor-net
    logging: *default-logging
    volumes:
      - ./cli/scripts:/home/graph/scripts


######################################################################################
#####################         INDEXER SERVICE CONTAINER        #######################
######################################################################################

  indexer-service:
    image: ${INDEXER_SERVICE_VERSION:-ghcr.io/graphprotocol/indexer-service:v0.20.22}
    # container_name: indexer-service
    depends_on:
      - postgres2
    environment:
      INDEXER_SERVICE_MNEMONIC: ${OPERATOR_SEED_PHRASE}
      INDEXER_SERVICE_INDEXER_ADDRESS: ${STAKING_WALLET_ADDRESS}
      INDEXER_SERVICE_PORT: 7600
      INDEXER_SERVICE_ETHEREUM_NETWORK: mainnet
      INDEXER_SERVICE_ETHEREUM: ${TXN_RPC}
      INDEXER_SERVICE_GRAPH_NODE_QUERY_ENDPOINT: http://query-node-0:8000
      INDEXER_SERVICE_GRAPH_NODE_STATUS_ENDPOINT: http://index-node-0:8030/graphql
      INDEXER_SERVICE_NETWORK_SUBGRAPH_ENDPOINT: ${INDEXER_SERVICE_NETWORK_SUBGRAPH_ENDPOINT:-https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet}
      INDEXER_SERVICE_NETWORK_SUBGRAPH_DEPLOYMENT: ${NETWORK_SUBGRAPH_DEPLOYMENT}
      INDEXER_SERVICE_POSTGRES_HOST: postgres2
      INDEXER_SERVICE_POSTGRES_USERNAME: ${DB_USER:-graph-node}
      INDEXER_SERVICE_POSTGRES_PASSWORD: ${DB_PASS:-db-password}
      INDEXER_SERVICE_POSTGRES_DATABASE: ${AGENT_DB_NAME:-indexer-agent}
      INDEXER_SERVICE_WALLET_WORKER_THREADS: ${WORKER_THREADS_PER_INDEXER_SERVICE:-8}
      INDEXER_SERVICE_CLIENT_SIGNER_ADDRESS: "0x982D10c56b8BBbD6e09048F5c5f01b43C65D5aE0"
      SKIP_EVM_VALIDATION: "true"
      SERVER_HOST: ${AGENT_DB_HOST:-postgres2}
      SERVER_PORT: 5432
      SERVER_DB_USER: ${DB_USER:-graph-node}
      SERVER_DB_PASSWORD: ${DB_PASS:-db-password}
      SERVER_DB_NAME: ${AGENT_DB_NAME:-indexer-agent}
    expose:
      - 7300
      - 7600
    networks:
      - monitor-net
      - traefik_proxy
    restart: unless-stopped
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.http.services.indexer-service-${VOLUME_ID:-80}.loadbalancer.server.port=7600"
      - "traefik.http.routers.indexer-service-${VOLUME_ID:-80}.entrypoints=web"
      # - "traefik.http.routers.indexer-service-${VOLUME_ID:-80}.tls.certresolver=myresolver"
      - "traefik.http.routers.indexer-service-${VOLUME_ID:-80}.rule=Host(`$INDEX_HOST`)"


######################################################################################
#####################        INDEXER AGENT CONTAINER           #######################
######################################################################################

  indexer-agent:
    image: ${INDEXER_AGENT_VERSION:-ghcr.io/graphprotocol/indexer-agent:v0.20.22}
    # container_name: indexer-agent
    depends_on:
      - postgres2
    expose:
      - 7300
      - 8000
      - 8001
      - 8002
    environment:
      INDEXER_AGENT_MNEMONIC: ${OPERATOR_SEED_PHRASE}
      INDEXER_AGENT_INDEXER_ADDRESS: ${STAKING_WALLET_ADDRESS}
      INDEXER_AGENT_INDEX_NODE_IDS: "index_node_0"
      INDEXER_AGENT_INJECT_DAI: "true"
      INDEXER_AGENT_REBATE_CLAIM_THRESHOLD: ${REBATE_CLAIM_THRESHOLD:-200}
      INDEXER_AGENT_REBATE_CLAIM_BATCH_THRESHOLD: ${REBATE_CLAIM_BATCH_THRESHOLD:-2000}
      INDEXER_AGENT_REBATE_CLAIM_MAX_BATCH_SIZE: ${REBATE_CLAIM_MAX_BATCH_SIZE:-100}
      INDEXER_AGENT_VOUCHER_REDEMPTION_THRESHOLD: ${VOUCHER_REDEMPTION_THRESHOLD:-200}
      INDEXER_AGENT_VOUCHER_REDEMPTION_BATCH_THRESHOLD: ${VOUCHER_REDEMPTION_BATCH_THRESHOLD:-2000}
      INDEXER_AGENT_VOUCHER_REDEMPTION_MAX_BATCH_SIZE: ${VOUCHER_REDEMPTION_MAX_BATCH_SIZE:-100}
      INDEXER_AGENT_ETHEREUM_NETWORK: mainnet
      INDEXER_AGENT_ETHEREUM: ${TXN_RPC}
      INDEXER_AGENT_GRAPH_NODE_QUERY_ENDPOINT: http://query-node-0:8000
      INDEXER_AGENT_GRAPH_NODE_STATUS_ENDPOINT: http://index-node-0:8030/graphql
      INDEXER_AGENT_GRAPH_NODE_ADMIN_ENDPOINT: http://index-node-0:8020
      INDEXER_AGENT_PUBLIC_INDEXER_URL: 'https://${INDEX_HOST}/'
      INDEXER_AGENT_INDEXER_GEO_COORDINATES: ${GEO_COORDINATES:-60.16952 24.93545}
      INDEXER_AGENT_NETWORK_SUBGRAPH_ENDPOINT: ${INDEXER_AGENT_NETWORK_SUBGRAPH_ENDPOINT:-https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet}
      INDEXER_AGENT_NETWORK_SUBGRAPH_DEPLOYMENT: ${NETWORK_SUBGRAPH_DEPLOYMENT}
      INDEXER_AGENT_EPOCH_SUBGRAPH_ENDPOINT: ${INDEXER_AGENT_EPOCH_SUBGRAPH_ENDPOINT:-https://api.thegraph.com/subgraphs/name/graphprotocol/mainnet-epoch-block-oracle}
      INDEXER_AGENT_POSTGRES_HOST: ${AGENT_DB_HOST:-postgres2}
      INDEXER_AGENT_POSTGRES_USERNAME: ${DB_USER:-graph-node}
      INDEXER_AGENT_POSTGRES_PASSWORD: ${DB_PASS:-db-password}
      INDEXER_AGENT_POSTGRES_DATABASE: ${AGENT_DB_NAME:-indexer-agent}
      INDEXER_AGENT_DAI_CONTRACT: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
      INDEXER_AGENT_COLLECT_RECEIPTS_ENDPOINT: https://gateway.thegraph.com/collect-receipts
      INDEXER_AGENT_OFFCHAIN_SUBGRAPHS: ${INDEXER_AGENT_OFFCHAIN_SUBGRAPHS}
      INDEXER_AGENT_GAS_PRICE_MAX: ${INDEXER_AGENT_GAS_PRICE_MAX:-50}
      INDEXER_AGENT_ALLOCATION_MANAGEMENT: auto
    networks:
      - monitor-net
    restart: unless-stopped
    logging: *default-logging



######################################################################################
#####################       POSTGRES AGENT CONTAINER           #######################
######################################################################################



  postgres2:
    image: postgres:13.6
    # container_name: postgres2
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-graph-node}
      POSTGRES_PASSWORD: ${DB_PASS:-db-password}
      POSTGRES_DB: ${AGENT_DB_NAME:-indexer-agent}
    volumes:
      - postgres2_data:/var/lib/postgresql/data
    networks:
      - monitor-net
    expose:
      - 5432
    logging: *default-logging

######################################################################################
#####################         TRAEFIK PROXY CONTAINER          #######################
######################################################################################      


  # traefik:
  #   image: traefik:latest
  #   container_name: traefik
  #   restart: always
  #   expose:
  #     - "8082"
  #   ports:
  #     - "${HTTP_PORT:-80}:80"
  #   command:
  #     - "--api=true"
  #     - "--api.insecure=true"
  #     - "--api.dashboard=true"
  #     - "--log.level=DEBUG"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--providers.file.filename=/dynamic_config.yml"
  #     - "--entrypoints.web.address=:${HTTP_PORT:-80}"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--entryPoints.metrics.address=:8082"
  #     - "--metrics.prometheus.entryPoint=metrics"
  #     - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
  #     # TESTING
  #     - "--certificatesresolvers.myresolver.acme.email=$EMAIL"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #   volumes:
  #     - "./traefik/letsencrypt:/letsencrypt"
  #     - "./traefik/config/dynamic_config.yml:/dynamic_config.yml"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   networks:
  #     - monitor-net
  #   labels:
  #     - "traefik.enable=true"
